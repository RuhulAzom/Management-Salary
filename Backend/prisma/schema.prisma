// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(uuid())
  email    String    @unique
  username String
  password String
  role     User_Role @default(ADMIN)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum User_Role {
  ADMIN
  USER
}

model Employee {
  id          String   @id @default(uuid())
  name        String
  member      Int
  first_enter DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Attendance_Data Attendance_Data[]
  Employee_Salary Employee_Salary[]
}

model Employee_Salary {
  id              String   @id @default(uuid())
  employee_id     String
  start_date      DateTime
  end_date        DateTime
  member          Int
  attendance      Int
  permit          Int
  permit_data     String
  overtime        Int
  overtime_data   String
  overtime_salary Int
  total_salary    Int
  salary_per_day  Int      @default(60000)

  Employee Employee @relation(fields: [employee_id], references: [id], onDelete: Cascade)
}

model Attendance_Data {
  id          String          @id @default(uuid())
  employee_id String
  type        Attendance_Type
  date        DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Employee Employee @relation(fields: [employee_id], references: [id], onDelete: Cascade)
}

model Branch {
  id     String @id @default(uuid())
  branch String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Attendance_Type {
  OVERTIME
  PERMIT
}
